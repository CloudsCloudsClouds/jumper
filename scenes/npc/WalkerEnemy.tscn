[gd_scene load_steps=12 format=2]

[ext_resource path="res://assets/1bitplatformerpack/Tiles/Transparent/tile_0263.png" type="Texture" id=1]
[ext_resource path="res://assets/1bitplatformerpack/Tiles/Transparent/tile_0261.png" type="Texture" id=2]
[ext_resource path="res://assets/1bitplatformerpack/Tiles/Transparent/tile_0262.png" type="Texture" id=3]

[sub_resource type="GDScript" id=7]
script/source = "extends KinematicBody2D

var dead:bool = false

var dir = 1 setget change_dir
var velocity:Vector2

var acceleration:float = 750
export var maxvelocity:float = 75

func _physics_process(delta):
	velocity = move_and_slide(velocity,Vector2.UP)
	if dir == 1 && !dead:
		velocity.x = min(velocity.x + acceleration*dir*delta, maxvelocity*dir)
	elif !dead:
		velocity.x = max(velocity.x + acceleration*dir*delta, maxvelocity*dir)
		pass
	else:
		rotation_degrees += 55
		scale -= Vector2(0.02,0.02)
	velocity.y += 15
	pass

func change_dir(new_dir):
	dir = new_dir
	if dir == 1:
		$AnimatedSprite.flip_h = false
	else:
		$AnimatedSprite.flip_h = true
		pass
	pass

func _on_mine_exploded():
	velocity.x = 0
	velocity.y = -250
	dead = true
	$CollisionShape2D.queue_free()
	$CollisionDamage.queue_free()
	$Damager.queue_free()
	pass

func _on_DirectionChanger_area_entered(area):
	if dir == 1:
		change_dir(-1)
	else:
		change_dir(1)
		pass
	pass # Replace with function body.


func _on_VisibilityNotifier2D_screen_exited():
	if dead:
		queue_free()
	pass # Replace with function body.
"

[sub_resource type="RectangleShape2D" id=9]
extents = Vector2( 6, 5.5 )

[sub_resource type="SpriteFrames" id=2]
animations = [ {
"frames": [ ExtResource( 2 ), ExtResource( 3 ), ExtResource( 1 ) ],
"loop": true,
"name": "default",
"speed": 12.0
} ]

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 7, 5.5 )

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 7, 5.5 )

[sub_resource type="RectangleShape2D" id=8]
extents = Vector2( 6, 5.5 )

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 4, 4 )

[sub_resource type="RectangleShape2D" id=6]
extents = Vector2( 4, 4 )

[node name="WalkerEnemy" type="Node2D"]

[node name="TheEnemy" type="KinematicBody2D" parent="."]
script = SubResource( 7 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="TheEnemy"]
position = Vector2( 0, 2.5 )
shape = SubResource( 9 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="TheEnemy"]
frames = SubResource( 2 )
frame = 1
playing = true

[node name="DirectionChanger" type="Area2D" parent="TheEnemy"]
visible = false
collision_layer = 8
collision_mask = 8
monitorable = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="TheEnemy/DirectionChanger"]
position = Vector2( 0, 2.5 )
shape = SubResource( 3 )

[node name="Damager" type="Area2D" parent="TheEnemy"]
visible = false
collision_layer = 16
collision_mask = 16
monitoring = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="TheEnemy/Damager"]
position = Vector2( 0, 2.5 )
shape = SubResource( 4 )

[node name="CollisionDamage" type="Area2D" parent="TheEnemy"]
collision_layer = 2
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="TheEnemy/CollisionDamage"]
position = Vector2( 0, 2.5 )
shape = SubResource( 8 )

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="TheEnemy"]
position = Vector2( 4.17233e-07, 4.17233e-07 )
scale = Vector2( 0.8, 0.8 )

[node name="VisibilityEnabler2D" type="VisibilityEnabler2D" parent="TheEnemy"]
position = Vector2( 1.43051e-06, 9.53674e-07 )
scale = Vector2( 1.6, 1.6 )

[node name="Direction1" type="Area2D" parent="."]
position = Vector2( -16, 0 )
collision_layer = 8
collision_mask = 8
monitoring = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="Direction1"]
shape = SubResource( 5 )

[node name="Direction2" type="Area2D" parent="."]
position = Vector2( 16, 0 )
collision_layer = 8
collision_mask = 8

[node name="CollisionShape2D" type="CollisionShape2D" parent="Direction2"]
shape = SubResource( 6 )

[connection signal="area_entered" from="TheEnemy/DirectionChanger" to="TheEnemy" method="_on_DirectionChanger_area_entered"]
[connection signal="screen_exited" from="TheEnemy/VisibilityNotifier2D" to="TheEnemy" method="_on_VisibilityNotifier2D_screen_exited"]
